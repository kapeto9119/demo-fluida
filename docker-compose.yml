services:
  # Database
  db:
    image: postgres:15-alpine
    container_name: fluida-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fluida
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fluida-network
    restart: unless-stopped

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: fluida-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: fluida
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    networks:
      - fluida-network
    restart: unless-stopped

  # Frontend web application
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fluida-frontend
    depends_on:
      - backend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - fluida-network
    restart: unless-stopped

# Persistent volumes
volumes:
  db_data:
    name: fluida-db-data

# Shared networks
networks:
  fluida-network:
    name: fluida-network 